{"version":3,"sources":["components/Marker.js","components/Line.js","components/YaMap.js","components/Points.js","components/AddPoint.js","api/index.js","containers/RouteMap/actions.js","containers/RouteMap/types.js","containers/RouteMap/container.js","containers/RouteMap/reducer.js","app/reducers.js","App.js","index.js"],"names":["Marker","props","_useState","useState","_useState2","Object","slicedToArray","startDragCoords","changeCoords","index","react_default","a","createElement","react","react_yandex_maps_es","assign","onDragStart","e","coords","get","geometry","getCoordinates","onDragEnd","handleChangeCoords","options","preset","draggable","coordinates","Line","_ref","type","strokeColor","strokeWidth","YaMap","mapState","placemarks","className","state","width","height","map","placemarkParams","i","key","concat","id","components_Marker","length","components_Line","defaultProps","Points","addMarker","removeMarker","requestErrorCode","components_AddPoint","react_drag_list_lib_default","dataSource","handles","rowKey","row","item","properties","balloonContent","href","onClick","onUpdate","updatedList","changeOrder","AddPoint","inputText","changeInputText","_useState3","_useState4","errorText","setErrorText","action","method","onSubmit","event","preventDefault","name","placeholder","onChange","text","target","value","trim","apiUrl","requestRejected","data","arguments","undefined","dispatch","resetRequestStatus","geocodeRequest","scoParam","axios","url","headers","Accept","Content-Type","changeMapCenter","shapeMarker","address","Date","now","getInfoLocation","requestData","then","response","status","Error","GeoObjectCollection","featureMember","GeoObject","Point","metaDataProperty","GeocoderMetaData","responseDataCoords","pos","responseDataAddress","Address","formatted","formattedCoords","split","reverse","catch","getAddressLocation","getState","RouteMapReducer","filter","connect","actions","bindActionCreators","RouteMapActions","_props$actions2","components_Points","components_YaMap","_props$actions","initialState","center","zoom","controls","objectSpread","toConsumableArray","AppReducers","combineReducers","App","container","store","createStore","compose","applyMiddleware","thunk","render","es","src_App_0","document","getElementById"],"mappings":"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","file":"static/js/main.091b9f8f.chunk.js","sourcesContent":["import React, { Fragment, useState } from 'react';\nimport { Placemark } from 'react-yandex-maps';\nimport PropTypes from 'prop-types';\n\nconst Marker = (props) => {\n    const [startDragCoords, changeCoords] = useState(null);\n\n    const handleDragStart = (e) => {\n        const coords = e.get('target').geometry.getCoordinates();\n\n        changeCoords(coords);\n    };\n\n    const handleDragEnd = (e) => {\n        const { index, handleChangeCoords } = props;\n        const coords = e.get('target').geometry.getCoordinates();\n\n        changeCoords(null);\n        handleChangeCoords(index, coords);\n    };\n\n    const { index } = props;\n\n    return (\n        <Fragment>\n            <Placemark\n                onDragStart={handleDragStart}\n                onDragEnd={handleDragEnd}\n                options={{\n                    preset: index === 0 ? 'islands#redDotIcon' : 'islands#darkBlueDotIcon',\n                    draggable: true,\n                }}\n                {...props}\n            />\n            {startDragCoords\n                && (\n                    <Placemark\n                        geometry={{\n                            coordinates: startDragCoords,\n                        }}\n                        options={{\n                            preset: 'islands#lightBlueDotIcon',\n                            draggable: false,\n                        }}\n                    />\n                )\n            }\n        </Fragment>\n    );\n};\n\nMarker.propTypes = {\n    index: PropTypes.number,\n    geometry: PropTypes.shape(),\n    properties: PropTypes.shape(),\n    handleChangeCoords: PropTypes.func,\n\n};\n\nexport default Marker;\n","import React from 'react';\nimport { GeoObject } from 'react-yandex-maps';\nimport PropTypes from 'prop-types';\n\nconst Line = ({ coordinates }) => (\n    <GeoObject\n        geometry={{\n            type: 'LineString',\n            coordinates,\n        }}\n        options={{\n            draggable: false,\n            strokeColor: '#000',\n            strokeWidth: 5,\n        }}\n    />\n);\n\nLine.propTypes = {\n    coordinates: PropTypes.arrayOf(\n        PropTypes.arrayOf(PropTypes.number),\n    ),\n};\n\nexport default Line;\n","import React, { Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport { YMaps, Map } from 'react-yandex-maps';\nimport { Marker, Line } from '.';\n\nconst YaMap = (props) => {\n    const {\n        mapState,\n        placemarks,\n        handleChangeCoords,\n    } = props;\n\n    return (\n        <div className=\"ya-route\">\n            <div className=\"ya-route__map\">\n                <YMaps>\n                    <Map\n                        state={mapState}\n                        width=\"100%\"\n                        height=\"500px\"\n                    >\n                        {placemarks.map((placemarkParams, i) => (\n                            <Fragment key={`placemarkFragment${placemarkParams.id}`}>\n                                <Marker\n                                    index={i}\n                                    key={placemarkParams.id}\n                                    handleChangeCoords={handleChangeCoords}\n                                    {...placemarkParams}\n                                />\n                                { i !== placemarks.length - 1\n                                && (\n                                    <Line\n                                        key={`l${placemarkParams.id}`}\n                                        coordinates={\n                                            [\n                                                placemarkParams.geometry.coordinates,\n                                                placemarks[i + 1].geometry.coordinates,\n                                            ]\n                                        }\n                                    />\n                                )\n                                }\n                            </Fragment>\n                        ))}\n                    </Map>\n                </YMaps>\n            </div>\n        </div>\n    );\n};\n\nYaMap.defaultProps = {\n    placemarks: [],\n};\n\nYaMap.propTypes = {\n    mapState: PropTypes.shape(),\n    placemarks: PropTypes.arrayOf(PropTypes.shape()),\n    handleChangeCoords: PropTypes.func,\n};\n\nexport default YaMap;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport ReactDragList from 'react-drag-list';\nimport { AddPoint } from '.';\n\nconst Points = (props) => {\n    const handleUpdate = (e, updatedList) => {\n        const { changeOrder } = props;\n\n        changeOrder(updatedList);\n    };\n\n    const {\n        addMarker,\n        placemarks,\n        removeMarker,\n        requestErrorCode,\n    } = props;\n\n    return (\n        <div className=\"point-panel\">\n            <div className=\"point-panel__form\">\n                <AddPoint\n                    addMarker={addMarker}\n                    requestErrorCode={requestErrorCode}\n                />\n            </div>\n            <div className=\"point-panel__list\">\n                {placemarks && (\n                    <ReactDragList\n                        dataSource={placemarks}\n                        handles={false}\n                        rowKey=\"id\"\n                        row={(item, index) => (\n                            <div key={item.id} className=\"point\">\n                                <span className=\"point__info\">\n                                    <strong>{`${index + 1}.`}</strong>\n                                    {` ${item.properties.balloonContent}`}\n                                </span>\n                                <a\n                                    href=\"#del\"\n                                    className=\"point__delete\"\n                                    onClick={() => removeMarker(item.id)}\n                                >\n                                    <span className=\"visually-hidden\">Удалить</span>\n                                </a>\n                            </div>\n                        )}\n                        onUpdate={handleUpdate}\n                    />\n                )}\n            </div>\n        </div>\n    );\n};\n\nPoints.defaultProps = {\n    placemarks: [],\n};\n\nPoints.propTypes = {\n    addMarker: PropTypes.func,\n    changeOrder: PropTypes.func,\n    placemarks: PropTypes.arrayOf(PropTypes.shape()),\n    removeMarker: PropTypes.func,\n    requestErrorCode: PropTypes.number,\n};\n\nexport default Points;\n","import React, { Fragment, useState } from 'react';\nimport PropTypes from 'prop-types';\n\nconst AddPoint = (props) => {\n    const [inputText, changeInputText] = useState('');\n    const [errorText, setErrorText] = useState(null);\n\n    const changeInput = (event) => {\n        const text = event.target.value.trim();\n\n        changeInputText(text);\n    };\n\n    const handleAddMarker = (event) => {\n        const { addMarker } = props;\n\n        event.preventDefault();\n\n        if (inputText) {\n            addMarker(inputText);\n            changeInputText('');\n            setErrorText(null);\n        } else {\n            setErrorText('Укажите адрес');\n        }\n    };\n\n    const { requestErrorCode } = props;\n\n    return (\n        <Fragment>\n            <form\n                action=\"#\"\n                method=\"get\"\n                onSubmit={handleAddMarker}\n            >\n                <div className=\"form-group row\">\n                    <input\n                        type=\"text\"\n                        name=\"placemark-name\"\n                        className=\"form-control\"\n                        placeholder=\"Введите адрес\"\n                        onChange={changeInput}\n                        value={inputText}\n                    />\n                </div>\n            </form>\n            { errorText\n                && (\n                    <div className=\"error-text\">\n                        {errorText}\n                    </div>\n                )\n            }\n            { !!requestErrorCode\n                && (\n                    <div className=\"error-text\">\n                        {requestErrorCode === 2\n                            ? 'Адрес не найден. Измените запрос.'\n                            : 'Возникла ошибка. Попробуйте позже.'\n                        }\n                    </div>\n                )\n            }\n        </Fragment>\n    );\n};\n\nAddPoint.propTypes = {\n    requestErrorCode: PropTypes.number,\n    addMarker: PropTypes.func,\n};\n\nexport default AddPoint;\n","const apiUrl = () => 'https://geocode-maps.yandex.ru/1.x/?apikey=c10f7b53-070d-4871-bdef-5c595cfc5e44&format=json';\n\nexport default apiUrl;\n","import axios from 'axios';\nimport apiUrl from '../../api';\nimport * as actionTypes from './types';\n\nexport const requestRejected = (data = 1) => dispatch => (\n    dispatch({\n        type: actionTypes.REQUEST_REJECTED,\n        data,\n    })\n);\n\nexport const resetRequestStatus = () => dispatch => (\n    dispatch({\n        type: actionTypes.REQUEST_RESET_STATUS,\n    })\n);\n\nexport const geocodeRequest = (data, scoParam) => (\n    axios({\n        method: 'get',\n        url: `${apiUrl()}${(scoParam && scoParam !== '') ? `&sco=${scoParam}` : ''}&geocode=${data}`,\n        headers: {\n            Accept: 'application/json',\n            'Content-Type': 'application/json',\n        },\n    })\n);\n\nexport const changeOrder = data => dispatch => (\n    dispatch({\n        type: actionTypes.CHANGE_MARKER_ORDER,\n        data,\n    })\n);\n\nexport const changeCoords = (index, coords) => dispatch => (\n    dispatch({\n        type: actionTypes.SET_MARKER_COORDS,\n        data: {\n            index,\n            coords,\n        },\n    })\n);\n\nexport const changeMapCenter = coords => dispatch => (\n    dispatch({\n        type: actionTypes.CHANGE_MAP_CENTER,\n        data: coords,\n    })\n);\n\nexport const shapeMarker = (coords, address) => (dispatch) => {\n    const id = Date.now();\n\n    const newPlacemark = {\n        id,\n        geometry: {\n            coordinates: coords,\n        },\n        properties: {\n            balloonContent: address,\n        },\n    };\n\n    dispatch({\n        type: actionTypes.ADD_MARKER,\n        data: newPlacemark,\n    });\n};\n\nexport const getInfoLocation = requestData => dispatch => (\n    geocodeRequest(requestData)\n        .then((response) => {\n            const { status, data } = response;\n\n            if (status >= 400) {\n                throw new Error('Bad response from server');\n            }\n\n            if (\n                data.response.GeoObjectCollection.featureMember\n                && data.response.GeoObjectCollection.featureMember.length > 0\n                && data.response.GeoObjectCollection.featureMember[0].GeoObject.Point\n                && data.response.GeoObjectCollection.featureMember[0]\n                    .GeoObject.metaDataProperty.GeocoderMetaData\n            ) {\n                const responseDataCoords = data.response.GeoObjectCollection.featureMember[0]\n                    .GeoObject.Point.pos;\n                const responseDataAddress = data.response.GeoObjectCollection.featureMember[0]\n                    .GeoObject.metaDataProperty.GeocoderMetaData.Address.formatted;\n\n                if (responseDataCoords !== '') {\n                    const coords = responseDataCoords.split(' ').reverse();\n                    const formattedCoords = coords.map(item => +item);\n\n                    dispatch(resetRequestStatus());\n                    dispatch(shapeMarker(formattedCoords, responseDataAddress));\n                    dispatch(changeMapCenter(formattedCoords));\n                }\n            } else {\n                dispatch(requestRejected(2));\n            }\n        })\n        .catch(() => (\n            dispatch(requestRejected(1))\n        ))\n);\n\nexport const getAddressLocation = (index, requestData, scoParam = '') => dispatch => (\n    geocodeRequest(requestData, scoParam)\n        .then((response) => {\n            const { status, data } = response;\n\n            if (status >= 400) {\n                throw new Error('Bad response from server');\n            }\n\n            if (data.response.GeoObjectCollection.featureMember\n                && data.response.GeoObjectCollection.featureMember.length > 0) {\n                dispatch(resetRequestStatus());\n                dispatch({\n                    type: actionTypes.SET_MARKER_ADDRESS,\n                    data: {\n                        index,\n                        address: data.response.GeoObjectCollection.featureMember[0]\n                            .GeoObject.metaDataProperty.GeocoderMetaData.Address.formatted,\n                    },\n                });\n            } else {\n                dispatch(requestRejected(2));\n            }\n        })\n        .catch(() => (\n            dispatch(requestRejected(1))\n        ))\n);\n\nexport const addMarker = data => (dispatch) => {\n    dispatch(getInfoLocation(data));\n};\n\nexport const removeMarker = id => (dispatch, getState) => {\n    const { RouteMapReducer: { placemarks } } = getState();\n\n    const newList = placemarks.filter(item => item.id !== id);\n\n    dispatch({\n        type: actionTypes.REMOVE_MARKER,\n        data: newList,\n    });\n};\n","export const CHANGE_MAP_CENTER = 'CHANGE_MAP_CENTER';\n\nexport const SET_MARKER_ADDRESS = 'SET_MARKER_ADDRESS';\nexport const SET_MARKER_COORDS = 'SET_MARKER_COORDS';\n\nexport const CHANGE_MARKER_ORDER = 'CHANGE_MARKER_ORDER';\n\nexport const ADD_MARKER = 'ADD_MARKER';\nexport const REMOVE_MARKER = 'REMOVE_MARKER';\n\nexport const REQUEST_REJECTED = 'REQUEST_REJECTED';\nexport const REQUEST_RESET_STATUS = 'REQUEST_RESET_STATUS';\n","import React, { Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport { bindActionCreators } from 'redux';\nimport { connect } from 'react-redux';\nimport { Points, YaMap } from '../../components';\nimport * as RouteMapActions from './actions';\n\nconst RouteMap = (props) => {\n    const handleChangeCoords = (id, coords) => {\n        const {\n            actions: {\n                changeCoords,\n                getAddressLocation,\n            },\n        } = props;\n\n        changeCoords(id, coords);\n        getAddressLocation(id, coords, 'latlong');\n    };\n\n    const {\n        mapState,\n        placemarks,\n        requestErrorCode,\n        actions: {\n            addMarker,\n            removeMarker,\n            changeOrder,\n        },\n    } = props;\n\n    return (\n        <Fragment>\n            <Points\n                placemarks={placemarks}\n                addMarker={addMarker}\n                removeMarker={removeMarker}\n                changeOrder={changeOrder}\n                requestErrorCode={requestErrorCode}\n            />\n            <YaMap\n                mapState={mapState}\n                placemarks={placemarks}\n                handleChangeCoords={handleChangeCoords}\n            />\n        </Fragment>\n    );\n};\n\nRouteMap.propTypes = {\n    mapState: PropTypes.shape(),\n    placemarks: PropTypes.arrayOf(PropTypes.shape()),\n    requestErrorCode: PropTypes.number,\n    actions: PropTypes.shape({\n        changeCoords: PropTypes.func,\n        getAddressLocation: PropTypes.func,\n        getInfoLocation: PropTypes.func,\n        addMarker: PropTypes.func,\n        removeMarker: PropTypes.func,\n    }),\n};\n\nconst mapStateToProps = state => ({\n    mapState: state.RouteMapReducer.mapState,\n    placemarks: state.RouteMapReducer.placemarks,\n    requestErrorCode: state.RouteMapReducer.requestErrorCode,\n});\n\nconst mapDispatchToProps = dispatch => ({\n    actions: bindActionCreators(RouteMapActions, dispatch),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(RouteMap);\n","import * as actionTypes from './types';\n\nconst initialState = {\n    mapState: {\n        center: [54.314, 48.403],\n        zoom: 7,\n        controls: ['zoomControl'],\n    },\n    placemarks: [],\n    requestErrorCode: null,\n};\n\nconst RouteMapReducer = (state = { ...initialState }, action) => {\n    switch (action.type) {\n    case actionTypes.CHANGE_MAP_CENTER: {\n        return {\n            ...state,\n            mapState: {\n                ...state.mapState,\n                center: action.data,\n            },\n        };\n    }\n\n    case actionTypes.SET_MARKER_ADDRESS: {\n        const placemarks = [...state.placemarks];\n        placemarks[action.data.index].properties.balloonContent = action.data.address;\n\n        return {\n            ...state,\n            placemarks,\n        };\n    }\n\n    case actionTypes.SET_MARKER_COORDS: {\n        const placemarks = [...state.placemarks];\n        placemarks[action.data.index].geometry.coordinates = action.data.coords;\n\n        return {\n            ...state,\n            placemarks,\n        };\n    }\n\n    case actionTypes.CHANGE_MARKER_ORDER: {\n        return {\n            ...state,\n            placemarks: [...action.data],\n        };\n    }\n\n    case actionTypes.ADD_MARKER: {\n        return {\n            ...state,\n            placemarks: [...state.placemarks, action.data],\n        };\n    }\n\n    case actionTypes.REMOVE_MARKER: {\n        return {\n            ...state,\n            placemarks: [...action.data],\n        };\n    }\n\n    case actionTypes.REQUEST_REJECTED: {\n        return {\n            ...state,\n            requestErrorCode: action.data,\n        };\n    }\n\n    case actionTypes.REQUEST_RESET_STATUS: {\n        return {\n            ...state,\n            requestErrorCode: null,\n        };\n    }\n\n    default: {\n        return state;\n    }\n    }\n};\n\nexport default RouteMapReducer;\n","import { combineReducers } from 'redux';\nimport { RouteMapReducer } from '../containers/RouteMap';\n\nconst AppReducers = () => (\n    combineReducers({\n        RouteMapReducer,\n    })\n);\n\nexport default AppReducers;\n","import React from 'react';\nimport { RouteMap } from './containers/RouteMap';\nimport './App.css';\n\nconst App = () => (\n    <div className=\"container\">\n        <div className=\"wrapper\">\n            <RouteMap />\n        </div>\n    </div>\n);\n\nexport default App;\n","import '@babel/polyfill';\nimport React from 'react';\nimport { createStore, applyMiddleware, compose } from 'redux';\nimport { render } from 'react-dom';\nimport { Provider } from 'react-redux';\nimport thunk from 'redux-thunk';\nimport AppReducers from './app/reducers';\nimport App from './App';\n\nconst store = createStore(\n    AppReducers(),\n    compose(\n        applyMiddleware(thunk),\n    ),\n);\n\nrender(\n    <Provider store={store}>\n        <App />\n    </Provider>, document.getElementById('root'),\n);\n"],"sourceRoot":""}